{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport * as filterSelectors from '../store/selectors';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\nimport { DatePicker } from 'material-ui-pickers';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nexport var SearchField = function (_Component) {\n  _inherits(SearchField, _Component);\n\n  function SearchField() {\n    _classCallCheck(this, SearchField);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  SearchField.prototype.render = function render() {\n    var _props = this.props,\n        theme = _props.theme,\n        queryIndex = _props.queryIndex,\n        currentField = _props.currentField,\n        query = _props.query,\n        formatMessage = _props.formatMessage,\n        fields = _props.fields,\n        handleQueryChange = _props.handleQueryChange,\n        DateTimeFormat = _props.DateTimeFormat,\n        locale = _props.locale,\n        okLabel = _props.okLabel,\n        cancelLabel = _props.cancelLabel;\n\n    var _filterSelectors$sele = filterSelectors.selectQueryProps(query),\n        value = _filterSelectors$sele.value,\n        isCaseSensitive = _filterSelectors$sele.isCaseSensitive;\n\n    if (queryIndex == null || currentField == null || query == null || handleQueryChange == null || fields == null) {\n      return React.createElement('div', null);\n    }\n\n    var fieldType = '';\n    var fieldLabel = '';\n    fields.map(function (field) {\n      if (field.name === currentField.value) {\n        fieldType = field.type;\n        fieldLabel = field.label;\n      }\n\n      return field;\n    });\n\n    if (fieldType === 'date') {\n      return React.createElement(Toolbar, null, React.createElement(DatePicker, {\n        keyboard: true,\n        label: formatMessage ? formatMessage({\n          id: 'enter_query_text'\n        }) : '',\n        format: 'DD/MM/YYYY',\n        placeholder: '10/10/2018',\n        mask: function mask(value) {\n          return value ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [];\n        },\n        value: value,\n        onChange: function onChange(val) {\n          handleQueryChange(queryIndex, 'value', val.format());\n        },\n        disableOpenOnEnter: true,\n        animateYearScrolling: false\n      }));\n    }\n\n    if (fieldType === 'bool') {\n      return React.createElement(Toolbar, null, React.createElement(Switch, {\n        label: fieldLabel,\n        onChange: function onChange(e, val) {\n          handleQueryChange(queryIndex, 'value', val);\n        },\n        value: value\n      }));\n    } else {\n      //string\n      return React.createElement(Toolbar, null, React.createElement(TextField, {\n        fullWidth: true,\n        name: 'value',\n        onChange: function onChange(e, val) {\n          handleQueryChange(queryIndex, 'value', e.target.value);\n        },\n        value: value ? value : '',\n        placeholder: formatMessage ? formatMessage({\n          id: 'enter_query_text'\n        }) : ''\n      }), React.createElement(Tooltip, {\n        id: 'tooltip-bottom-start',\n        title: formatMessage ? formatMessage({\n          id: isCaseSensitive ? 'disable_case_sensitivity' : 'enable_case_sensitivity'\n        }) : '',\n        placement: 'bottom-end'\n      }, React.createElement(IconButton, {\n        onClick: function onClick() {\n          handleQueryChange(queryIndex, 'isCaseSensitive', !isCaseSensitive);\n        },\n        color: isCaseSensitive ? 'primary' : undefined\n      }, React.createElement(Icon, null, 'format_size'))));\n    }\n  };\n\n  return SearchField;\n}(Component);","map":null,"metadata":{},"sourceType":"module"}