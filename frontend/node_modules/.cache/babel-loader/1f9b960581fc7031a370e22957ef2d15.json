{"ast":null,"code":"import _classCallCheck from \"/Users/xiehaochen/Desktop/practice06/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xiehaochen/Desktop/practice06/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xiehaochen/Desktop/practice06/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xiehaochen/Desktop/practice06/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xiehaochen/Desktop/practice06/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xiehaochen/Desktop/practice06/src/containers/ProcessRender.jsx\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './ProcessRender.css';\nimport '../../node_modules/bootstrap-directional-buttons/dist/bootstrap-directional-buttons.css';\nvar process_name = [\"Buy\", \"Roast\", \"Winnow\", \"Grind\", \"Package\"];\nvar fermented_status_name = [\"Raw Material\", \"Roasted Beans\", \"Winnowed Beans\", \"Ground Beans\", \"Chocolate Bars\"];\nvar unfermented_status_name = [\"Raw Material\", \"Roasted Beans\", \"Winnowed Beans\", \"Ground Beans\", \"Cocoa Powder\"];\nvar fermented_status_list = process_name.map(function (process, index) {\n  var input = index - 1 < 0 ? none : fermented_status_name[index - 1];\n  var output = fermented_status_name[index];\n  return React.createElement(\"div\", {\n    className: \"process-name-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"process-name \".concat(output),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-arrow-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/Fermented/\".concat(input, \"-to-\").concat(output, \"/\").concat(process, \"/data-input\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, process)))), React.createElement(\"div\", {\n    className: \"name-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"name-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, output)));\n});\nvar unfermented_status_list = process_name.map(function (process, index) {\n  var name = unfermented_status_name[index];\n  return React.createElement(\"div\", {\n    className: \"process-name-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"process-name \".concat(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-arrow-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/Unfermented/\".concat(process, \"/data-input\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, process)))), React.createElement(\"div\", {\n    className: \"name-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"name-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, name)));\n});\n\nvar ProcessRender =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProcessRender, _Component);\n\n  function ProcessRender() {\n    _classCallCheck(this, ProcessRender);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProcessRender).apply(this, arguments));\n  }\n\n  _createClass(ProcessRender, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"process outer-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Production Process\"), React.createElement(\"div\", {\n        className: \"process-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Fermented Beans\"), React.createElement(\"div\", {\n        className: \"process-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, fermented_status_list), React.createElement(\"div\", {\n        className: \"process-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Unfermented Beans\"), React.createElement(\"div\", {\n        className: \"process-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, unfermented_status_list));\n    }\n  }]);\n\n  return ProcessRender;\n}(Component);\n\nexport default ProcessRender;","map":{"version":3,"sources":["/Users/xiehaochen/Desktop/practice06/src/containers/ProcessRender.jsx"],"names":["React","Component","NavLink","process_name","fermented_status_name","unfermented_status_name","fermented_status_list","map","process","index","input","none","output","unfermented_status_list","name","ProcessRender"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA,OAAO,qBAAP;AACA,OAAO,yFAAP;AAGA,IAAMC,YAAY,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,OAA3B,EAAoC,SAApC,CAArB;AAEA,IAAMC,qBAAqB,GAAG,CAAC,cAAD,EAAiB,eAAjB,EAAkC,gBAAlC,EAAoD,cAApD,EAAoE,gBAApE,CAA9B;AACA,IAAMC,uBAAuB,GAAG,CAAC,cAAD,EAAiB,eAAjB,EAAkC,gBAAlC,EAAoD,cAApD,EAAoE,cAApE,CAAhC;AACA,IAAMC,qBAAqB,GAAGH,YAAY,CAACI,GAAb,CAAkB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClE,MAAMC,KAAK,GAAID,KAAK,GAAC,CAAN,GAAQ,CAAT,GAAcE,IAAd,GAAqBP,qBAAqB,CAACK,KAAK,GAAC,CAAP,CAAxD;AACA,MAAMG,MAAM,GAAGR,qBAAqB,CAACK,KAAD,CAApC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,yBAAkBG,MAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,uBAAgBF,KAAhB,iBAA4BE,MAA5B,cAAsCJ,OAAtC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAAvE,CADF,CADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCI,MAAjC,CADF,CANF,CADF;AAYD,CAf6B,CAA9B;AAgBA,IAAMC,uBAAuB,GAAGV,YAAY,CAACI,GAAb,CAAkB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACpE,MAAMK,IAAI,GAAGT,uBAAuB,CAACI,KAAD,CAApC;AACA,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,yBAAkBK,IAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,yBAAkBN,OAAlB,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,OAAJ,CAAnD,CADF,CADF,CADF,EAME;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCM,IAAjC,CADF,CANF,CADF;AAYD,CAd+B,CAAhC;;IAgBMC,a;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,EAGE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,qBADH,CAHF,EAME;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BANF,EAOE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGO,uBADH,CAPF,CADF;AAcD;;;;EAhByBZ,S;;AAmB5B,eAAec,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\n\nimport './ProcessRender.css';\nimport '../../node_modules/bootstrap-directional-buttons/dist/bootstrap-directional-buttons.css';\n\n\nconst process_name = [\"Buy\", \"Roast\", \"Winnow\", \"Grind\", \"Package\"];\n\nconst fermented_status_name = [\"Raw Material\", \"Roasted Beans\", \"Winnowed Beans\", \"Ground Beans\", \"Chocolate Bars\"];\nconst unfermented_status_name = [\"Raw Material\", \"Roasted Beans\", \"Winnowed Beans\", \"Ground Beans\", \"Cocoa Powder\"];\nconst fermented_status_list = process_name.map(((process, index) => {\n  const input = (index-1<0) ? none : fermented_status_name[index-1];\n  const output = fermented_status_name[index];\n  return(\n    <div className=\"process-name-container\">\n      <div className={`process-name ${output}`}>\n        <button type=\"button\" className=\"btn-arrow-right\">\n          <NavLink to={`/Fermented/${input}-to-${output}/${process}/data-input`}><a>{process}</a></NavLink>\n        </button>\n      </div>\n      <div className=\"name-text\">\n        <button className=\"name-button\">{output}</button>\n      </div>\n    </div>\n  )\n}));\nconst unfermented_status_list = process_name.map(((process, index) => {\n  const name = unfermented_status_name[index];\n  return(\n    <div className=\"process-name-container\">\n      <div className={`process-name ${name}`}>\n        <button type=\"button\" className=\"btn-arrow-right\">\n          <NavLink to={`/Unfermented/${process}/data-input`}><a>{process}</a></NavLink>\n        </button>\n      </div>\n      <div className=\"name-text\">\n        <button className=\"name-button\">{name}</button>\n      </div>\n    </div>\n  )\n}));\n\nclass ProcessRender extends Component {\n  render() {\n    return (\n      <div className=\"process outer-container\">\n        <div className=\"page-title\">Production Process</div>\n        <div className=\"process-title\">Fermented Beans</div>\n        <div className=\"process-container\">\n          {fermented_status_list}\n        </div>\n        <div className=\"process-title\">Unfermented Beans</div>\n        <div className=\"process-container\">\n          {unfermented_status_list}\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default ProcessRender;"]},"metadata":{},"sourceType":"module"}