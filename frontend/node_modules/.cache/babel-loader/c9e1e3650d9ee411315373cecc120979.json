{"ast":null,"code":"import _classCallCheck from \"/Users/xiehaochen/Desktop/practice06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xiehaochen/Desktop/practice06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xiehaochen/Desktop/practice06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xiehaochen/Desktop/practice06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xiehaochen/Desktop/practice06/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xiehaochen/Desktop/practice06/src/containers/SummaryTable.jsx\";\n// import React, {Component} from 'react';\n// import {Table, TableBody, TableFooter, TableHeader, TableHeaderColumn, TableRow, TableRowColumn} from '@material-ui/core';\n// import TableHead from '@material-ui/core/TableHead';\n// import Paper from '@material-ui/core/Paper';\n// import TableCell from '@material-ui/core/TableCell';\n// import { withStyles } from '@material-ui/core/styles';\n// const styles = theme => ({\n//   root: {\n//     width: '100%',\n//     marginTop: theme.spacing.unit * 3,\n//     overflowX: 'auto',\n//   },\n//   table: {\n//     padding: '20px',\n//     minWidth: 700,\n//   },\n// });\n// class SummaryTable extends Component {\n//   render() {\n//     let id = 0;\n//     function createData(name, calories, fat, carbs, protein) {\n//       id += 1;\n//       return { id, name, calories, fat, carbs, protein };\n//     }\n//     const rows = [\n//       createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//       createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//       createData('Eclair', 262, 16.0, 24, 6.0),\n//       createData('Cupcake', 305, 3.7, 67, 4.3),\n//       createData('Gingerbread', 356, 16.0, 49, 3.9),\n//     ];\n//     return (\n//       <Paper className=\"paper\">\n//           <Table className=\"table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell>Dessert (100g serving)</TableCell>\n//                 <TableCell align=\"right\">Calories</TableCell>\n//                 <TableCell align=\"right\">Fat (g)</TableCell>\n//                 <TableCell align=\"right\">Carbs (g)</TableCell>\n//                 <TableCell align=\"right\">Protein (g)</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {rows.map(row => (\n//                 <TableRow key={row.id}>\n//                   <TableCell component=\"th\" scope=\"row\">\n//                     {row.name}\n//                   </TableCell>\n//                   <TableCell align=\"right\">{row.calories}</TableCell>\n//                   <TableCell align=\"right\">{row.fat}</TableCell>\n//                   <TableCell align=\"right\">{row.carbs}</TableCell>\n//                   <TableCell align=\"right\">{row.protein}</TableCell>\n//                 </TableRow>\n//               ))}\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//     )\n//   }\n// }\n// export default withStyles(styles)(SummaryTable);\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { FilteringState, IntegratedFiltering } from '@devexpress/dx-react-grid';\nimport { Grid, Table, TableHeaderRow, TableFilterRow } from '@devexpress/dx-react-grid-material-ui'; // import { generateRows } from '../../demo-data/generator';\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Demo, _React$PureComponent);\n\n  function Demo(props) {\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Demo).call(this, props));\n    _this.state = {\n      columns: [{\n        name: 'name',\n        title: 'Name'\n      }, {\n        name: 'sex',\n        title: 'Sex'\n      }, {\n        name: 'city',\n        title: 'City'\n      }, {\n        name: 'car',\n        title: 'Car'\n      }],\n      rows: [{\n        name: 'name',\n        title: 'Name'\n      }, {\n        name: 'sex',\n        title: 'Sex'\n      }, {\n        name: 'city',\n        title: 'City'\n      }, {\n        name: 'car',\n        title: 'Car'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          rows = _this$state.rows,\n          columns = _this$state.columns;\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        rows: rows,\n        columns: columns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(FilteringState, {\n        defaultFilters: [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(IntegratedFiltering, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(TableHeaderRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(TableFilterRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Demo;\n}(React.PureComponent);\n\nexport { Demo as default };","map":{"version":3,"sources":["/Users/xiehaochen/Desktop/practice06/src/containers/SummaryTable.jsx"],"names":["React","Paper","FilteringState","IntegratedFiltering","Grid","Table","TableHeaderRow","TableFilterRow","Demo","props","state","columns","name","title","rows","PureComponent"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SACEC,cADF,EAEEC,mBAFF,QAGO,2BAHP;AAIA,SACEC,IADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,uCALP,C,CAOA;;IAEqBC,I;;;;;AACnB,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADO,EAEP;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFO,EAGP;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAHO,EAIP;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAJO,CADE;AAOXC,MAAAA,IAAI,EAAE,CACJ;AAAEF,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OADI,EAEJ;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAFI,EAGJ;AAAED,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAHI,EAIJ;AAAED,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,KAAK,EAAE;AAAtB,OAJI;AAPK,KAAb;AAHiB;AAiBlB;;;;6BAEQ;AAAA,wBACmB,KAAKH,KADxB;AAAA,UACCI,IADD,eACCA,IADD;AAAA,UACOH,OADP,eACOA,OADP;AAGP,aACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAEG,IADR;AAEE,QAAA,OAAO,EAAEH,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,cAAD;AAAgB,QAAA,cAAc,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF,CADF;AAcD;;;;EArC+BX,KAAK,CAACe,a;;SAAnBP,I","sourcesContent":["// import React, {Component} from 'react';\n// import {Table, TableBody, TableFooter, TableHeader, TableHeaderColumn, TableRow, TableRowColumn} from '@material-ui/core';\n// import TableHead from '@material-ui/core/TableHead';\n// import Paper from '@material-ui/core/Paper';\n// import TableCell from '@material-ui/core/TableCell';\n// import { withStyles } from '@material-ui/core/styles';\n\n// const styles = theme => ({\n//   root: {\n//     width: '100%',\n//     marginTop: theme.spacing.unit * 3,\n//     overflowX: 'auto',\n//   },\n//   table: {\n//     padding: '20px',\n//     minWidth: 700,\n//   },\n// });\n\n// class SummaryTable extends Component {\n//   render() {\n//     let id = 0;\n//     function createData(name, calories, fat, carbs, protein) {\n//       id += 1;\n//       return { id, name, calories, fat, carbs, protein };\n//     }\n    \n//     const rows = [\n//       createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//       createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//       createData('Eclair', 262, 16.0, 24, 6.0),\n//       createData('Cupcake', 305, 3.7, 67, 4.3),\n//       createData('Gingerbread', 356, 16.0, 49, 3.9),\n//     ];\n    \n//     return (\n//       <Paper className=\"paper\">\n//           <Table className=\"table\">\n//             <TableHead>\n//               <TableRow>\n//                 <TableCell>Dessert (100g serving)</TableCell>\n//                 <TableCell align=\"right\">Calories</TableCell>\n//                 <TableCell align=\"right\">Fat (g)</TableCell>\n//                 <TableCell align=\"right\">Carbs (g)</TableCell>\n//                 <TableCell align=\"right\">Protein (g)</TableCell>\n//               </TableRow>\n//             </TableHead>\n//             <TableBody>\n//               {rows.map(row => (\n//                 <TableRow key={row.id}>\n//                   <TableCell component=\"th\" scope=\"row\">\n//                     {row.name}\n//                   </TableCell>\n//                   <TableCell align=\"right\">{row.calories}</TableCell>\n//                   <TableCell align=\"right\">{row.fat}</TableCell>\n//                   <TableCell align=\"right\">{row.carbs}</TableCell>\n//                   <TableCell align=\"right\">{row.protein}</TableCell>\n//                 </TableRow>\n//               ))}\n//             </TableBody>\n//           </Table>\n//         </Paper>\n//     )\n//   }\n// }\n\n// export default withStyles(styles)(SummaryTable);\n\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  FilteringState,\n  IntegratedFiltering,\n} from '@devexpress/dx-react-grid';\nimport {\n  Grid,\n  Table,\n  TableHeaderRow,\n  TableFilterRow,\n} from '@devexpress/dx-react-grid-material-ui';\n\n// import { generateRows } from '../../demo-data/generator';\n\nexport default class Demo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      columns: [\n        { name: 'name', title: 'Name' },\n        { name: 'sex', title: 'Sex' },\n        { name: 'city', title: 'City' },\n        { name: 'car', title: 'Car' },\n      ],\n      rows: [\n        { name: 'name', title: 'Name' },\n        { name: 'sex', title: 'Sex' },\n        { name: 'city', title: 'City' },\n        { name: 'car', title: 'Car' },\n      ],\n    };\n  }\n\n  render() {\n    const { rows, columns } = this.state;\n\n    return (\n      <Paper>\n        <Grid\n          rows={rows}\n          columns={columns}\n        >\n          <FilteringState defaultFilters={[]} />\n          <IntegratedFiltering />\n          <Table />\n          <TableHeaderRow />\n          <TableFilterRow />\n        </Grid>\n      </Paper>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}