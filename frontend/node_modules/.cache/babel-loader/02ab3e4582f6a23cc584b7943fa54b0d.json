{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport * as types from './types';\n\nfunction query(query, action) {\n  var payload = action.payload;\n\n  switch (action.type) {\n    case types.ON_ADD_FILTER_QUERY:\n    case types.ON_EDIT_FILTER_QUERY:\n      return _extends({}, query, payload);\n\n    default:\n      return query;\n  }\n}\n\nfunction queries() {\n  var queries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments[1];\n  var index = action.index;\n\n  switch (action.type) {\n    case types.ON_ADD_FILTER_QUERY:\n      return [].concat(queries, [query({}, action)]);\n\n    case types.ON_EDIT_FILTER_QUERY:\n      return queries.map(function (q, i) {\n        if (index !== i) {\n          return q;\n        }\n\n        return query(q, action);\n      });\n\n    case types.ON_REMOVE_FILTER_QUERY:\n      return queries.filter(function (item, i) {\n        return i !== index;\n      });\n\n    default:\n      return queries;\n  }\n}\n\nfunction search() {\n  var search = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n  var payload = action.payload;\n\n  switch (action.type) {\n    case types.ON_SET_SEARCH:\n      return _extends({}, search, {\n        value: payload\n      });\n\n    default:\n      return search;\n  }\n}\n\nfunction filter() {\n  var filter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n  var payload = action.payload;\n\n  switch (action.type) {\n    case types.ON_FILTER_OPEN_CHANGED:\n    case types.ON_FILTER_SORT_FIELD_CHANGED:\n    case types.ON_FILTER_SORT_ORIENTATION_CHANGED:\n      return _extends({}, filter, payload);\n\n    case types.ON_ADD_FILTER_QUERY:\n    case types.ON_EDIT_FILTER_QUERY:\n    case types.ON_REMOVE_FILTER_QUERY:\n      return _extends({}, filter, {\n        queries: queries(filter.queries, action)\n      });\n\n    case types.ON_SET_SEARCH:\n      return _extends({}, filter, {\n        search: search(filter.search, action)\n      });\n\n    default:\n      return filter;\n  }\n}\n\nexport default function filters() {\n  var _extends2;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments[1];\n  var name = action.name;\n\n  switch (action.type) {\n    case types.ON_FILTER_OPEN_CHANGED:\n    case types.ON_FILTER_SORT_FIELD_CHANGED:\n    case types.ON_FILTER_SORT_ORIENTATION_CHANGED:\n    case types.ON_ADD_FILTER_QUERY:\n    case types.ON_EDIT_FILTER_QUERY:\n    case types.ON_REMOVE_FILTER_QUERY:\n    case types.ON_SET_SEARCH:\n      return _extends({}, state, (_extends2 = {}, _extends2[name] = filter(state[name], action), _extends2));\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}