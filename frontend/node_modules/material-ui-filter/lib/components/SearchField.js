'use strict';

exports.__esModule = true;
exports.SearchField = undefined;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _selectors = require('../store/selectors');

var filterSelectors = _interopRequireWildcard(_selectors);

var _Switch = require('@material-ui/core/Switch');

var _Switch2 = _interopRequireDefault(_Switch);

var _TextField = require('@material-ui/core/TextField');

var _TextField2 = _interopRequireDefault(_TextField);

var _materialUiPickers = require('material-ui-pickers');

var _IconButton = require('@material-ui/core/IconButton');

var _IconButton2 = _interopRequireDefault(_IconButton);

var _Icon = require('@material-ui/core/Icon');

var _Icon2 = _interopRequireDefault(_Icon);

var _Toolbar = require('@material-ui/core/Toolbar');

var _Toolbar2 = _interopRequireDefault(_Toolbar);

var _Tooltip = require('@material-ui/core/Tooltip');

var _Tooltip2 = _interopRequireDefault(_Tooltip);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchField = exports.SearchField = function (_Component) {
  _inherits(SearchField, _Component);

  function SearchField() {
    _classCallCheck(this, SearchField);

    return _possibleConstructorReturn(this, _Component.apply(this, arguments));
  }

  SearchField.prototype.render = function render() {
    var _props = this.props,
        theme = _props.theme,
        queryIndex = _props.queryIndex,
        currentField = _props.currentField,
        query = _props.query,
        formatMessage = _props.formatMessage,
        fields = _props.fields,
        handleQueryChange = _props.handleQueryChange,
        DateTimeFormat = _props.DateTimeFormat,
        locale = _props.locale,
        okLabel = _props.okLabel,
        cancelLabel = _props.cancelLabel;

    var _filterSelectors$sele = filterSelectors.selectQueryProps(query),
        value = _filterSelectors$sele.value,
        isCaseSensitive = _filterSelectors$sele.isCaseSensitive;

    if (queryIndex == null || currentField == null || query == null || handleQueryChange == null || fields == null) {
      return _react2.default.createElement('div', null);
    }

    var fieldType = '';
    var fieldLabel = '';

    fields.map(function (field) {
      if (field.name === currentField.value) {
        fieldType = field.type;
        fieldLabel = field.label;
      }
      return field;
    });

    if (fieldType === 'date') {
      return _react2.default.createElement(
        _Toolbar2.default,
        null,
        _react2.default.createElement(_materialUiPickers.DatePicker, {
          keyboard: true,
          label: formatMessage ? formatMessage({ id: 'enter_query_text' }) : '',
          format: 'DD/MM/YYYY',
          placeholder: '10/10/2018',
          mask: function mask(value) {
            return value ? [/\d/, /\d/, '/', /\d/, /\d/, '/', /\d/, /\d/, /\d/, /\d/] : [];
          },
          value: value,
          onChange: function onChange(val) {
            handleQueryChange(queryIndex, 'value', val.format());
          },
          disableOpenOnEnter: true,
          animateYearScrolling: false
        })
      );
    }

    if (fieldType === 'bool') {
      return _react2.default.createElement(
        _Toolbar2.default,
        null,
        _react2.default.createElement(_Switch2.default, {
          label: fieldLabel,
          onChange: function onChange(e, val) {
            handleQueryChange(queryIndex, 'value', val);
          },
          value: value
        })
      );
    } else {
      //string

      return _react2.default.createElement(
        _Toolbar2.default,
        null,
        _react2.default.createElement(_TextField2.default, {
          fullWidth: true,
          name: 'value',
          onChange: function onChange(e, val) {
            handleQueryChange(queryIndex, 'value', e.target.value);
          },
          value: value ? value : '',
          placeholder: formatMessage ? formatMessage({ id: 'enter_query_text' }) : ''
        }),
        _react2.default.createElement(
          _Tooltip2.default,
          {
            id: 'tooltip-bottom-start',
            title: formatMessage ? formatMessage({ id: isCaseSensitive ? 'disable_case_sensitivity' : 'enable_case_sensitivity' }) : '',
            placement: 'bottom-end'
          },
          _react2.default.createElement(
            _IconButton2.default,
            {
              onClick: function onClick() {
                handleQueryChange(queryIndex, 'isCaseSensitive', !isCaseSensitive);
              },
              color: isCaseSensitive ? 'primary' : undefined
            },
            _react2.default.createElement(
              _Icon2.default,
              null,
              'format_size'
            )
          )
        )
      );
    }
  };

  return SearchField;
}(_react.Component);