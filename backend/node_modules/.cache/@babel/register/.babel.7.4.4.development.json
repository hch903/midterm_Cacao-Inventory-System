{
  "{\"sourceRoot\":\"/Users/xiehaochen/Desktop/midterm_Inventory System/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/xiehaochen/Desktop/midterm_Inventory System/backend\",\"filename\":\"/Users/xiehaochen/Desktop/midterm_Inventory System/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/xiehaochen/Desktop/midterm_Inventory System/backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend",
      "filename": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar mongoose = require('mongoose');\n\nvar bodyParser = require(\"body-parser\"); // Create server to serve index.html\n\n\nvar app = express();\n\nvar http = require('http').Server(app);\n\nvar port = process.env.PORT || 4000; // Routing\n// app.use(express.static('public'))\n\nvar router = express.Router();\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\napp.use(bodyParser.json()); // Socket.io serverSocket\n\nvar serverSocket = require('socket.io')(http); // Start server listening process.\n\n\nhttp.listen(port, function () {\n  console.log(\"Server listening on port \".concat(port, \".\"));\n}); // Connect to mongo\n\nmongoose.connect('mongodb+srv://Winston:Hsieh@cluster0-lrz44.gcp.mongodb.net/test?retryWrites=true', {\n  useNewUrlParser: true\n});\nvar db = mongoose.connection;\ndb.on('error', function (error) {\n  console.log(error);\n});\ndb.once(\"open\", function () {\n  console.log('MongoDB connected!');\n  serverSocket.on(\"connection\", function (socket) {\n    console.log('User connected');\n  });\n});\nrouter.use(function (req, res, next) {\n  // 輸出記錄訊息至終端機\n  console.log(req.method, req.url); // 繼續路由處理\n\n  next();\n});\nrouter.get('/', function (req, res) {\n  console.log(\"in\");\n  return res.send('Hello World!');\n});\nrouter.get('/summary', function (req, res) {\n  console.log(\"in sum\");\n  return res.send('Hello Sum!');\n});\napp.use('/', router);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vbmdvb3NlIiwiYm9keVBhcnNlciIsImFwcCIsImh0dHAiLCJTZXJ2ZXIiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwic2VydmVyU29ja2V0IiwibGlzdGVuIiwiY29uc29sZSIsImxvZyIsImNvbm5lY3QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJkYiIsImNvbm5lY3Rpb24iLCJvbiIsImVycm9yIiwib25jZSIsInNvY2tldCIsInJlcSIsInJlcyIsIm5leHQiLCJtZXRob2QiLCJ1cmwiLCJnZXQiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsVUFBRCxDQUF4Qjs7QUFDQSxJQUFNRSxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxhQUFELENBQTFCLEMsQ0FFQTs7O0FBQ0EsSUFBTUcsR0FBRyxHQUFHSixPQUFPLEVBQW5COztBQUNBLElBQU1LLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQUQsQ0FBUCxDQUFnQkssTUFBaEIsQ0FBdUJGLEdBQXZCLENBQWI7O0FBQ0EsSUFBTUcsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQyxDLENBRUE7QUFDQTs7QUFDQSxJQUFNQyxNQUFNLEdBQUdYLE9BQU8sQ0FBQ1ksTUFBUixFQUFmO0FBRUFSLEdBQUcsQ0FBQ1MsR0FBSixDQUFRVixVQUFVLENBQUNXLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUNBWCxHQUFHLENBQUNTLEdBQUosQ0FBUVYsVUFBVSxDQUFDYSxJQUFYLEVBQVIsRSxDQUVBOztBQUNBLElBQU1DLFlBQVksR0FBR2hCLE9BQU8sQ0FBQyxXQUFELENBQVAsQ0FBcUJJLElBQXJCLENBQXJCLEMsQ0FFQTs7O0FBQ0FBLElBQUksQ0FBQ2EsTUFBTCxDQUFZWCxJQUFaLEVBQWtCLFlBQU07QUFDcEJZLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixvQ0FBd0NiLElBQXhDO0FBQ0gsQ0FGRCxFLENBS0E7O0FBQ0FMLFFBQVEsQ0FBQ21CLE9BQVQsQ0FBaUIsa0ZBQWpCLEVBQXFHO0FBQ2pHQyxFQUFBQSxlQUFlLEVBQUU7QUFEZ0YsQ0FBckc7QUFHQSxJQUFNQyxFQUFFLEdBQUdyQixRQUFRLENBQUNzQixVQUFwQjtBQUVBRCxFQUFFLENBQUNFLEVBQUgsQ0FBTSxPQUFOLEVBQWUsVUFBQUMsS0FBSyxFQUFJO0FBQ3BCUCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWU0sS0FBWjtBQUNILENBRkQ7QUFJQUgsRUFBRSxDQUFDSSxJQUFILENBQVEsTUFBUixFQUFnQixZQUFNO0FBQ2xCUixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxvQkFBWjtBQUNBSCxFQUFBQSxZQUFZLENBQUNRLEVBQWIsQ0FBZ0IsWUFBaEIsRUFBOEIsVUFBQUcsTUFBTSxFQUFJO0FBQ3BDVCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxnQkFBWjtBQUNILEdBRkQ7QUFHSCxDQUxEO0FBT0FULE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFVBQVNnQixHQUFULEVBQWNDLEdBQWQsRUFBbUJDLElBQW5CLEVBQXlCO0FBQ2hDO0FBQ0FaLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUyxHQUFHLENBQUNHLE1BQWhCLEVBQXdCSCxHQUFHLENBQUNJLEdBQTVCLEVBRmdDLENBSWhDOztBQUNBRixFQUFBQSxJQUFJO0FBQ1AsQ0FORDtBQVFBcEIsTUFBTSxDQUFDdUIsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsVUFBQ0wsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDMUJYLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDQSxTQUFPVSxHQUFHLENBQUNLLElBQUosQ0FBUyxjQUFULENBQVA7QUFDSCxDQUhEO0FBS0F4QixNQUFNLENBQUN1QixHQUFQLENBQVcsVUFBWCxFQUF1QixVQUFDTCxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNqQ1gsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksUUFBWjtBQUNBLFNBQU9VLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFlBQVQsQ0FBUDtBQUNILENBSEQ7QUFLQS9CLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLEdBQVIsRUFBYUYsTUFBYiIsInNvdXJjZVJvb3QiOiIvVXNlcnMveGllaGFvY2hlbi9EZXNrdG9wL21pZHRlcm1fSW52ZW50b3J5IFN5c3RlbS9iYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKVxuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xuXG4vLyBDcmVhdGUgc2VydmVyIHRvIHNlcnZlIGluZGV4Lmh0bWxcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKS5TZXJ2ZXIoYXBwKVxuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNDAwMFxuXG4vLyBSb3V0aW5nXG4vLyBhcHAudXNlKGV4cHJlc3Muc3RhdGljKCdwdWJsaWMnKSlcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKCk7XG5cbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xuXG4vLyBTb2NrZXQuaW8gc2VydmVyU29ja2V0XG5jb25zdCBzZXJ2ZXJTb2NrZXQgPSByZXF1aXJlKCdzb2NrZXQuaW8nKShodHRwKVxuXG4vLyBTdGFydCBzZXJ2ZXIgbGlzdGVuaW5nIHByb2Nlc3MuXG5odHRwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coYFNlcnZlciBsaXN0ZW5pbmcgb24gcG9ydCAke3BvcnR9LmApXG59KVxuXG5cbi8vIENvbm5lY3QgdG8gbW9uZ29cbm1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vV2luc3RvbjpIc2llaEBjbHVzdGVyMC1scno0NC5nY3AubW9uZ29kYi5uZXQvdGVzdD9yZXRyeVdyaXRlcz10cnVlJywge1xuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZVxufSlcbmNvbnN0IGRiID0gbW9uZ29vc2UuY29ubmVjdGlvblxuXG5kYi5vbignZXJyb3InLCBlcnJvciA9PiB7XG4gICAgY29uc29sZS5sb2coZXJyb3IpXG59KVxuXG5kYi5vbmNlKFwib3BlblwiLCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ01vbmdvREIgY29ubmVjdGVkIScpO1xuICAgIHNlcnZlclNvY2tldC5vbihcImNvbm5lY3Rpb25cIiwgc29ja2V0ID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coJ1VzZXIgY29ubmVjdGVkJyk7XG4gICAgfSlcbn0pO1xuXG5yb3V0ZXIudXNlKGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgLy8g6Ly45Ye66KiY6YyE6KiK5oGv6Iez57WC56uv5qmfXG4gICAgY29uc29sZS5sb2cocmVxLm1ldGhvZCwgcmVxLnVybCk7XG4gIFxuICAgIC8vIOe5vOe6jOi3r+eUseiZleeQhlxuICAgIG5leHQoKTtcbn0pO1xuXG5yb3V0ZXIuZ2V0KCcvJywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJpblwiKTtcbiAgICByZXR1cm4gcmVzLnNlbmQoJ0hlbGxvIFdvcmxkIScpO1xufSk7XG5cbnJvdXRlci5nZXQoJy9zdW1tYXJ5JywgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc29sZS5sb2coXCJpbiBzdW1cIik7XG4gICAgcmV0dXJuIHJlcy5zZW5kKCdIZWxsbyBTdW0hJyk7XG59KTtcblxuYXBwLnVzZSgnLycsIHJvdXRlcik7Il19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "mongoose",
        "bodyParser",
        "app",
        "http",
        "Server",
        "port",
        "process",
        "env",
        "PORT",
        "router",
        "Router",
        "use",
        "urlencoded",
        "extended",
        "json",
        "serverSocket",
        "listen",
        "console",
        "log",
        "connect",
        "useNewUrlParser",
        "db",
        "connection",
        "on",
        "error",
        "once",
        "socket",
        "req",
        "res",
        "next",
        "method",
        "url",
        "get",
        "send"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B,C,CAEA;;;AACA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;;AACA,IAAMK,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAP,CAAgBK,MAAhB,CAAuBF,GAAvB,CAAb;;AACA,IAAMG,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;AACA;;AACA,IAAMC,MAAM,GAAGX,OAAO,CAACY,MAAR,EAAf;AAEAR,GAAG,CAACS,GAAJ,CAAQV,UAAU,CAACW,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAX,GAAG,CAACS,GAAJ,CAAQV,UAAU,CAACa,IAAX,EAAR,E,CAEA;;AACA,IAAMC,YAAY,GAAGhB,OAAO,CAAC,WAAD,CAAP,CAAqBI,IAArB,CAArB,C,CAEA;;;AACAA,IAAI,CAACa,MAAL,CAAYX,IAAZ,EAAkB,YAAM;AACpBY,EAAAA,OAAO,CAACC,GAAR,oCAAwCb,IAAxC;AACH,CAFD,E,CAKA;;AACAL,QAAQ,CAACmB,OAAT,CAAiB,kFAAjB,EAAqG;AACjGC,EAAAA,eAAe,EAAE;AADgF,CAArG;AAGA,IAAMC,EAAE,GAAGrB,QAAQ,CAACsB,UAApB;AAEAD,EAAE,CAACE,EAAH,CAAM,OAAN,EAAe,UAAAC,KAAK,EAAI;AACpBP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH,CAFD;AAIAH,EAAE,CAACI,IAAH,CAAQ,MAAR,EAAgB,YAAM;AAClBR,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,EAAAA,YAAY,CAACQ,EAAb,CAAgB,YAAhB,EAA8B,UAAAG,MAAM,EAAI;AACpCT,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,GAFD;AAGH,CALD;AAOAT,MAAM,CAACE,GAAP,CAAW,UAASgB,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACG,MAAhB,EAAwBH,GAAG,CAACI,GAA5B,EAFgC,CAIhC;;AACAF,EAAAA,IAAI;AACP,CAND;AAQApB,MAAM,CAACuB,GAAP,CAAW,GAAX,EAAgB,UAACL,GAAD,EAAMC,GAAN,EAAc;AAC1BX,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAOU,GAAG,CAACK,IAAJ,CAAS,cAAT,CAAP;AACH,CAHD;AAKAxB,MAAM,CAACuB,GAAP,CAAW,UAAX,EAAuB,UAACL,GAAD,EAAMC,GAAN,EAAc;AACjCX,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,SAAOU,GAAG,CAACK,IAAJ,CAAS,YAAT,CAAP;AACH,CAHD;AAKA/B,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAaF,MAAb",
      "sourceRoot": "/Users/xiehaochen/Desktop/midterm_Inventory System/backend",
      "sourcesContent": [
        "const express = require('express')\nconst mongoose = require('mongoose')\nconst bodyParser = require(\"body-parser\");\n\n// Create server to serve index.html\nconst app = express()\nconst http = require('http').Server(app)\nconst port = process.env.PORT || 4000\n\n// Routing\n// app.use(express.static('public'))\nconst router = express.Router();\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\n// Socket.io serverSocket\nconst serverSocket = require('socket.io')(http)\n\n// Start server listening process.\nhttp.listen(port, () => {\n    console.log(`Server listening on port ${port}.`)\n})\n\n\n// Connect to mongo\nmongoose.connect('mongodb+srv://Winston:Hsieh@cluster0-lrz44.gcp.mongodb.net/test?retryWrites=true', {\n    useNewUrlParser: true\n})\nconst db = mongoose.connection\n\ndb.on('error', error => {\n    console.log(error)\n})\n\ndb.once(\"open\", () => {\n    console.log('MongoDB connected!');\n    serverSocket.on(\"connection\", socket => {\n        console.log('User connected');\n    })\n});\n\nrouter.use(function(req, res, next) {\n    // 輸出記錄訊息至終端機\n    console.log(req.method, req.url);\n  \n    // 繼續路由處理\n    next();\n});\n\nrouter.get('/', (req, res) => {\n    console.log(\"in\");\n    return res.send('Hello World!');\n});\n\nrouter.get('/summary', (req, res) => {\n    console.log(\"in sum\");\n    return res.send('Hello Sum!');\n});\n\napp.use('/', router);"
      ]
    },
    "sourceType": "script",
    "mtime": 1558016436250
  }
}